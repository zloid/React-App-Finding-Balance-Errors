{"version":3,"sources":["features/selectors.js","features/processDataFromTextareas/leftTextareaSlice.js","features/processDataFromTextareas/TwoLeftTextarea/index.js","features/processDataFromTextareas/OutputDataTextareas/index.js","components/Layout/index.js","components/App/index.js","reducers/index.js","index.js"],"names":["selectFirstList","firstArray","arguments","length","undefined","_ref","secondArray","Object","toArray","slice","outputArray","map","e","indexOf","splice","filter","join","selectLenOfInputs","stringN","split","trim","doGoodArray","stringFromTextarea","test","replace","leftTextareaSlice","createSlice","name","initialState","dataFromTextareaOne","dataFromTextareaTwo","demoDataOne","demoDataTwo","deleteAllFlag","reducers","getDataFromTextarea","reducer","state","action","_action$payload","payload","stateTextareaOne","stateTextareaTwo","prepare","deleteAllFlagChange","deleteAllFlagFalse","actions","mapDispatch","connect","_state$leftTextareaRe","leftTextareaReducer","_useState","useState","_useState2","slicedToArray","setStateTextareaOne","_useState3","_useState4","setStateTextareaTwo","react_default","a","createElement","Fragment","Row","Col","index_esm","size","className","title","react_textarea_autosize_esm_browser","aria-label","value","onChange","target","Button","onClick","variant","window","scrollTo","OverlayTrigger","placement","overlay","Tooltip","id","sm","xs","outputOne","outputTwo","textInput","useRef","textInputTwo","current","select","document","execCommand","inputRef","Layout","Container","processDataFromTextareas_TwoLeftTextarea","processDataFromTextareas_OutputDataTextareas","Badge","App","src_components_Layout","GithubCorner_default","href","combineReducers","store","configureStore","rootReducer","render","es","components_App","getElementById"],"mappings":"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","file":"static/js/main.2e35464b.chunk.js","sourcesContent":["export const selectFirstList = (\r\n  firstArray = [],\r\n  [...secondArray],\r\n  filter = false\r\n) => {\r\n  if (filter) {\r\n    return ''\r\n  }\r\n  let outputArray = firstArray.map(e => {\r\n    if (secondArray.indexOf(e) !== -1) {\r\n      secondArray.splice(secondArray.indexOf(e), 1)\r\n      return (e = null)\r\n    }\r\n    return e\r\n  })\r\n  outputArray = outputArray.filter(e => e !== null)\r\n  return outputArray.join('\\n')\r\n}\r\n\r\nexport const selectLenOfInputs = stringN =>\r\n  stringN.split('\\n').filter(e => e.trim() !== '').length\r\n\r\nexport const doGoodArray = stringFromTextarea => {\r\n  let mid = stringFromTextarea.split('\\n').filter(e => /\\w/.test(e) === true)\r\n  return mid.map(e => e.trim().replace(/,/g, '.'))\r\n}\r\n ","import { createSlice } from '@reduxjs/toolkit'\r\n// own\r\nimport { doGoodArray } from 'features/selectors'\r\n\r\nexport const initialState = {\r\n  dataFromTextareaOne: ['3.555'],\r\n  dataFromTextareaTwo: ['9', '3.555', '789'],\r\n  demoDataOne: ['5', '11', '1', '2', '2', '4', '4', '8.5', '9'],\r\n  demoDataTwo: ['1', '2', '2', '3', '4', '8,5', '8.5'],\r\n  deleteAllFlag: false,\r\n}\r\n\r\nconst leftTextareaSlice = createSlice({\r\n  name: 'leftTextarea',\r\n  initialState,\r\n  reducers: {\r\n    getDataFromTextarea: {\r\n      //new payoad after prepare()\r\n      reducer(state, action) {\r\n        const { stateTextareaOne, stateTextareaTwo } = action.payload\r\n        state.dataFromTextareaOne = stateTextareaOne\r\n        state.dataFromTextareaTwo = stateTextareaTwo\r\n      },\r\n      //in: action.payload; out: next action.payload (transform action.payload after dispatch action, before pass to reducer getDataFromTextarea)\r\n      //in: 'data1'; 'data2' from payload ~> out: [data1]; [data2];\r\n      prepare({ stateTextareaOne, stateTextareaTwo }) {\r\n        return {\r\n          payload: {\r\n            stateTextareaOne: doGoodArray(stateTextareaOne),\r\n            stateTextareaTwo: doGoodArray(stateTextareaTwo),\r\n          },\r\n        }\r\n      },\r\n    },\r\n    deleteAllFlagChange(state) {\r\n      state.deleteAllFlag = true\r\n    },\r\n    deleteAllFlagFalse(state) {\r\n      state.deleteAllFlag = false\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  getDataFromTextarea,\r\n  deleteAllFlagChange,\r\n  deleteAllFlagFalse,\r\n} = leftTextareaSlice.actions\r\n\r\nexport default leftTextareaSlice.reducer\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Row, Col, Button, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport Textarea from 'react-textarea-autosize'\r\nimport {\r\n  FaSortNumericDown,\r\n  FaHandPointRight,\r\n  FaAngleDoubleLeft,\r\n  FaBomb,\r\n  FaUndo,\r\n} from 'react-icons/fa'\r\n//own\r\nimport {\r\n  getDataFromTextarea,\r\n  deleteAllFlagChange,\r\n  deleteAllFlagFalse,\r\n} from 'features/processDataFromTextareas/leftTextareaSlice'\r\nimport { selectLenOfInputs } from 'features/selectors'\r\n\r\nconst mapState = state => {\r\n  const {\r\n    demoDataOne,\r\n    demoDataTwo,\r\n    dataFromTextareaOne,\r\n    dataFromTextareaTwo,\r\n  } = state.leftTextareaReducer\r\n  return {\r\n    demoDataOne,\r\n    demoDataTwo,\r\n    dataFromTextareaOne,\r\n    dataFromTextareaTwo,\r\n  }\r\n}\r\n\r\nconst mapDispatch = {\r\n  getDataFromTextarea,\r\n  deleteAllFlagChange,\r\n  deleteAllFlagFalse,\r\n}\r\n\r\nconst TwoLeftTextarea = ({\r\n  getDataFromTextarea,\r\n  demoDataOne,\r\n  demoDataTwo,\r\n  deleteAllFlagChange,\r\n  deleteAllFlagFalse,\r\n  dataFromTextareaOne,\r\n  dataFromTextareaTwo,\r\n}) => {\r\n  const [stateTextareaOne, setStateTextareaOne] = useState(\r\n    dataFromTextareaOne.join('\\n')\r\n  )\r\n  const [stateTextareaTwo, setStateTextareaTwo] = useState(\r\n    dataFromTextareaTwo.join('\\n')\r\n  )\r\n\r\n  function someDemo() {\r\n    setStateTextareaOne(demoDataOne.join('\\n'))\r\n    setStateTextareaTwo(demoDataTwo.join('\\n'))\r\n  }\r\n\r\n  function deleteAll() {\r\n    setStateTextareaOne('')\r\n    setStateTextareaTwo('')\r\n    deleteAllFlagChange()\r\n  }\r\n\r\n  function getResult() {\r\n    window.scrollTo(0, 0)\r\n    //do if left and right textarea hollow\r\n    // if (stateTextareaOne.trim() && stateTextareaTwo.trim()) {\r\n    //   deleteAllFlagFalse()\r\n    //   getDataFromTextarea({ stateTextareaOne, stateTextareaTwo })\r\n    // }\r\n    deleteAllFlagFalse()\r\n    getDataFromTextarea({ stateTextareaOne, stateTextareaTwo })\r\n  }\r\n\r\n  function returnValues() {\r\n    window.scrollTo(0, 0)\r\n    setStateTextareaOne(dataFromTextareaOne.join('\\n'))\r\n    setStateTextareaTwo(dataFromTextareaTwo.join('\\n'))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <p>\r\n            <FaSortNumericDown size={20} />\r\n          </p>\r\n          <p className=\"underlineNumbers underline-left\">\r\n            <span title=\"length-of-input-first-data-textarea\">\r\n              {selectLenOfInputs(stateTextareaOne)}\r\n            </span>\r\n          </p>\r\n          <Textarea\r\n            aria-label=\"input-first-data-textarea\"\r\n            className=\"sticky textarea-left \"\r\n            value={stateTextareaOne}\r\n            onChange={e => setStateTextareaOne(e.target.value)}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <p>\r\n            <FaSortNumericDown size={20} />\r\n          </p>\r\n          <p className=\"underlineNumbers underline-left\">\r\n            <span title=\"length-of-input-second-data-textarea\">\r\n              {selectLenOfInputs(stateTextareaTwo)}\r\n            </span>\r\n          </p>\r\n          <Textarea\r\n            aria-label=\"input-second-data-textarea\"\r\n            className=\"sticky textarea-left\"\r\n            value={stateTextareaTwo}\r\n            onChange={e => setStateTextareaTwo(e.target.value)}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <div className=\"sticky buttons_block\">\r\n            <Button onClick={someDemo} variant=\"secondary\">\r\n              <FaAngleDoubleLeft /> Demo\r\n            </Button>\r\n\r\n            {/* <Button variant=\"success\" onClick={getResult}>result</Button> */}\r\n            {/* <u onClick={deleteAll}>result</u> */}\r\n            <Button variant=\"success\" onClick={getResult}>\r\n              {' '}\r\n              Get Result <FaHandPointRight />\r\n            </Button>\r\n\r\n            <Button onClick={deleteAll} variant=\"secondary\">\r\n              Delete All <FaBomb size={24} />\r\n            </Button>\r\n\r\n            <OverlayTrigger\r\n              placement=\"auto\"\r\n              overlay={\r\n                <Tooltip id=\"tooltip-disabled\">\r\n                  <Row>\r\n                    <Col sm={5} xs={5}>\r\n                      {dataFromTextareaOne.join(', ')}\r\n                    </Col>\r\n                    <Col sm={1} xs={1}>\r\n                      ---\r\n                    </Col>\r\n                    <Col sm={5} xs={5}>\r\n                      {dataFromTextareaTwo.join(', ')}\r\n                    </Col>\r\n                  </Row>\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <Button onClick={returnValues} variant=\"warning\">\r\n                <FaUndo /> Return\r\n              </Button>\r\n            </OverlayTrigger>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nTwoLeftTextarea.propTypes = {\r\n  getDataFromTextarea: PropTypes.func.isRequired,\r\n  demoDataOne: PropTypes.array.isRequired,\r\n  demoDataTwo: PropTypes.array.isRequired,\r\n  deleteAllFlagChange: PropTypes.func.isRequired,\r\n  deleteAllFlagFalse: PropTypes.func.isRequired,\r\n  dataFromTextareaOne: PropTypes.array.isRequired,\r\n  dataFromTextareaTwo: PropTypes.array.isRequired,\r\n}\r\nexport default connect(mapState, mapDispatch)(TwoLeftTextarea)\r\n","import React, { useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Row, Col, Button } from 'react-bootstrap'\r\nimport Textarea from 'react-textarea-autosize'\r\nimport { FaSortNumericUp } from 'react-icons/fa'\r\n//own\r\nimport { selectFirstList, selectLenOfInputs } from 'features/selectors'\r\n\r\nconst mapState = state => {\r\n  let {\r\n    dataFromTextareaOne,\r\n    dataFromTextareaTwo,\r\n    deleteAllFlag,\r\n  } = state.leftTextareaReducer\r\n  return {\r\n    outputOne: selectFirstList(\r\n      dataFromTextareaOne,\r\n      dataFromTextareaTwo,\r\n      deleteAllFlag\r\n    ),\r\n    outputTwo: selectFirstList(\r\n      dataFromTextareaTwo,\r\n      dataFromTextareaOne,\r\n      deleteAllFlag\r\n    ),\r\n  }\r\n}\r\n\r\nconst OutputDataTextareas = ({ outputOne, outputTwo }) => {\r\n  const textInput = useRef(null)\r\n  const textInputTwo = useRef(null)\r\n  function copyToClipboard() {\r\n    // e.target.focus()\r\n    // textInput.current.focus();\r\n    textInput.current.select()\r\n    document.execCommand('copy')\r\n  }\r\n  function copyToClipboardTwo() {\r\n    textInputTwo.current.select()\r\n    document.execCommand('copy')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <p>\r\n            <FaSortNumericUp size={20} />\r\n          </p>\r\n          <p>\r\n            <span title=\"length-of-output-first-right-textarea\" className=\"underlineNumbers\">\r\n              {selectLenOfInputs(outputOne)}\r\n            </span>\r\n            <Button variant=\"success\" onClick={copyToClipboard}>\r\n              copy\r\n            </Button>\r\n          </p>\r\n          <Textarea\r\n            aria-label=\"output-first-right-textarea\"\r\n            className=\"sticky underline-left\"\r\n            value={outputOne}\r\n            inputRef={textInput}\r\n            />\r\n        </Col>\r\n\r\n        <Col>\r\n          <p>\r\n            <FaSortNumericUp size={20} />\r\n          </p>\r\n          <p>\r\n            <span title=\"length-of-output-second-right-textarea\" className=\"underlineNumbers\">\r\n              {selectLenOfInputs(outputTwo)}\r\n            </span>\r\n            <Button variant=\"success\" onClick={copyToClipboardTwo}>\r\n              copy\r\n            </Button>\r\n          </p>\r\n\r\n          <Textarea\r\n            aria-label=\"output-second-right-textarea\"\r\n            className=\"sticky underline-left\"\r\n            value={outputTwo}\r\n            inputRef={textInputTwo}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nOutputDataTextareas.propTypes = {\r\n  outputOne: PropTypes.string.isRequired,\r\n  outputTwo: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default connect(mapState, null)(OutputDataTextareas)\r\n","import React from 'react'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Badge,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from 'react-bootstrap'\r\n\r\nimport './index.css'\r\nimport TwoLeftTextarea from 'features/processDataFromTextareas/TwoLeftTextarea'\r\nimport OutputDataTextareas from 'features/processDataFromTextareas/OutputDataTextareas'\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <TwoLeftTextarea />\r\n          <OutputDataTextareas />\r\n        </Row>\r\n        <Row>\r\n          <Col sm>\r\n            <div className=\"middlePos\">\r\n              <p>App for finding errors in the account balance</p>\r\n              <h6>\r\n                <OverlayTrigger\r\n                  placement=\"auto\"\r\n                  overlay={\r\n                    <Tooltip id=\"tooltip-disabled\">\r\n                      Numbers or Words in the first left column must be the same\r\n                      as the second column numbers (words) from left. If data\r\n                      not match, then we see the difference in the columns from\r\n                      right.\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Badge variant=\"primary\">How it's work</Badge>\r\n                </OverlayTrigger>\r\n                <OverlayTrigger\r\n                  placement=\"auto\"\r\n                  overlay={\r\n                    <Tooltip id=\"tooltip-disabled\">\r\n                      Comparison and processing of two data sets;\r\n                      <br />\r\n                      2,3 -> 2.3 (each comma become point);\r\n                      <br />\r\n                      Return button;\r\n                      <br />\r\n                      Delete all button;\r\n                      <br />\r\n                      Demo button;\r\n                      <br />\r\n                      Copy buttons;\r\n                      <br />\r\n                      Count each inputs numbers;\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Badge variant=\"success\">Features</Badge>\r\n                </OverlayTrigger>\r\n              </h6>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport GithubCorner from 'react-github-corner'\r\n//own\r\nimport Layout from 'components/Layout'\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Layout />\r\n      <GithubCorner href=\"https://github.com/zloid/React-App-Finding-Balance-Errors\" />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { combineReducers } from 'redux'\r\nimport leftTextareaReducer from 'features/processDataFromTextareas/leftTextareaSlice'\r\n\r\nexport default combineReducers({\r\n    leftTextareaReducer,\r\n})\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport App from 'components/App'\r\nimport rootReducer from './reducers'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n})\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n//<Badge pill (.|\\n)*?</Badge> - correct regexp for dell all badges pill"],"sourceRoot":""}